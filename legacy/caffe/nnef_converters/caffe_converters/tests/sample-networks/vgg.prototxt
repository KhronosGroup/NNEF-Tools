name: "CaffeNet"
layer {
  name: "data"
  type: "Input"
  top: "data"
  input_param {
    shape {
      dim: 1
      dim: 3
      dim: 224
      dim: 224
    }
  }
}
layer {
  name: "data/bn"
  type: "BatchNorm"
  bottom: "data"
  top: "data/bn"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "data/scale"
  type: "Scale"
  bottom: "data/bn"
  top: "data/scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data/scale"
  top: "conv1_1"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv1_1/bn"
  type: "BatchNorm"
  bottom: "conv1_1"
  top: "conv1_1/bn"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1/bn"
  top: "conv1_1/bn"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1/bn"
  top: "conv1_2"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv1_2/bn"
  type: "BatchNorm"
  bottom: "conv1_2"
  top: "conv1_2/bn"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2/bn"
  top: "conv1_2/bn"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2/bn"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv2_1/bn"
  type: "BatchNorm"
  bottom: "conv2_1"
  top: "conv2_1/bn"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1/bn"
  top: "conv2_1/bn"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1/bn"
  top: "conv2_2"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv2_2/bn"
  type: "BatchNorm"
  bottom: "conv2_2"
  top: "conv2_2/bn"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2/bn"
  top: "conv2_2/bn"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2/bn"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv3_1/bn"
  type: "BatchNorm"
  bottom: "conv3_1"
  top: "conv3_1/bn"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1/bn"
  top: "conv3_1/bn"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1/bn"
  top: "conv3_2"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv3_2/bn"
  type: "BatchNorm"
  bottom: "conv3_2"
  top: "conv3_2/bn"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2/bn"
  top: "conv3_2/bn"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2/bn"
  top: "conv3_3"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv3_3/bn"
  type: "BatchNorm"
  bottom: "conv3_3"
  top: "conv3_3/bn"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3/bn"
  top: "conv3_3/bn"
}
layer {
  name: "conv3_4"
  type: "Convolution"
  bottom: "conv3_3/bn"
  top: "conv3_4"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv3_4/bn"
  type: "BatchNorm"
  bottom: "conv3_4"
  top: "conv3_4/bn"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "relu3_4"
  type: "ReLU"
  bottom: "conv3_4/bn"
  top: "conv3_4/bn"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_4/bn"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv4_1/bn"
  type: "BatchNorm"
  bottom: "conv4_1"
  top: "conv4_1/bn"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1/bn"
  top: "conv4_1/bn"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1/bn"
  top: "conv4_2"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv4_2/bn"
  type: "BatchNorm"
  bottom: "conv4_2"
  top: "conv4_2/bn"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2/bn"
  top: "conv4_2/bn"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2/bn"
  top: "conv4_3"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv4_3/bn"
  type: "BatchNorm"
  bottom: "conv4_3"
  top: "conv4_3/bn"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3/bn"
  top: "conv4_3/bn"
}
layer {
  name: "conv4_4"
  type: "Convolution"
  bottom: "conv4_3/bn"
  top: "conv4_4"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv4_4/bn"
  type: "BatchNorm"
  bottom: "conv4_4"
  top: "conv4_4/bn"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "relu4_4"
  type: "ReLU"
  bottom: "conv4_4/bn"
  top: "conv4_4/bn"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_4/bn"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv5_1/bn"
  type: "BatchNorm"
  bottom: "conv5_1"
  top: "conv5_1/bn"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1/bn"
  top: "conv5_1/bn"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1/bn"
  top: "conv5_2"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv5_2/bn"
  type: "BatchNorm"
  bottom: "conv5_2"
  top: "conv5_2/bn"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2/bn"
  top: "conv5_2/bn"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2/bn"
  top: "conv5_3"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv5_3/bn"
  type: "BatchNorm"
  bottom: "conv5_3"
  top: "conv5_3/bn"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3/bn"
  top: "conv5_3/bn"
}
layer {
  name: "conv5_4"
  type: "Convolution"
  bottom: "conv5_3/bn"
  top: "conv5_4"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv5_4/bn"
  type: "BatchNorm"
  bottom: "conv5_4"
  top: "conv5_4/bn"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "relu5_4"
  type: "ReLU"
  bottom: "conv5_4/bn"
  top: "conv5_4/bn"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5_4/bn"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "fc6/bn"
  type: "BatchNorm"
  bottom: "fc6"
  top: "fc6/bn"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6/bn"
  top: "fc6/bn"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6/bn"
  top: "fc7"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "fc7/bn"
  type: "BatchNorm"
  bottom: "fc7"
  top: "fc7/bn"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7/bn"
  top: "fc7/bn"
}
layer {
  name: "fc8"
  type: "InnerProduct"
  bottom: "fc7/bn"
  top: "fc8"
  inner_product_param {
    num_output: 1000
  }
}
layer {
  name: "prob"
  type: "Softmax"
  bottom: "fc8"
  top: "prob"
}

